# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  - group: Build-Variables

  # Container registry service connection established during pipeline creation
  - name: dockerRegistryServiceConnection 
    value: 'd5923c5f-729e-49ec-a541-c4a0202e01a9'
  - name: imageRepository
    value: 'sitecoremasteraks'
  - name: containerRegistry
    value: 'igniumdigital.azurecr.io'
  - name: imagePullSecret
    value: 'igniumdigitala17c-auth'
  - name: vmImageName
    value: 'windows-latest'

stages:
- stage: Build
  displayName: Build Images & Push to ACR
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DockerCompose@0
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'Pay-As-You-Go(8e41e57d-9545-427d-919a-9347c41d69bb)'
        azureContainerRegistry: '{"loginServer":"igniumdigital.azurecr.io", "id" : "/subscriptions/8e41e57d-9545-427d-919a-9347c41d69bb/resourceGroups/Ignium-Docker/providers/Microsoft.ContainerRegistry/registries/IgniumDigital"}'
        dockerComposeFile: '**/docker-compose.yml'
        additionalDockerComposeFiles: 'docker-compose.override.yml'
        dockerComposeFileArgs: 'REGISTRY=igniumdigital.azurecr.io/'
        action: 'Build services'
        additionalImageTags: '$(Build.BuildNumber)-$(Build.SourceBranchName)'
        includeLatestTag: true
    - task: DockerCompose@0
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'Pay-As-You-Go(8e41e57d-9545-427d-919a-9347c41d69bb)'
        azureContainerRegistry: '{"loginServer":"igniumdigital.azurecr.io", "id" : "/subscriptions/8e41e57d-9545-427d-919a-9347c41d69bb/resourceGroups/Ignium-Docker/providers/Microsoft.ContainerRegistry/registries/IgniumDigital"}'
        dockerComposeFile: '**/docker-compose.yml'
        additionalDockerComposeFiles: 'docker-compose.override.yml'
        dockerComposeFileArgs: 'REGISTRY=igniumdigital.azurecr.io/'
        additionalImageTags: '$(Build.BuildNumber)-$(Build.SourceBranchName)'
        action: 'Push services'
        includeLatestTag: true
    - task: CopyFiles@2
      inputs:
        SourceFolder: 'deployment'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/deployment'
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifact: 'Texorida-$(Build.BuildNumber)'
        publishLocation: 'pipeline'